{"version":3,"sources":["store/actions/actionTypes.js","store/actions/authActions.js","store/actions/gameActions.js","store/actions/reviewsActions.js","components/MainPage/QuizLoading/QuizLoading.js","components/MainPage/Quiz/Quiz.js","components/MainPage/AddReview/AddReview.js","components/MainPage/GameOver/GameOver.js","components/MainPage/NameSelection/NameSelection.js","components/MainPage/Reviews/Reviews.js","components/MainPage/Scoreboard/Scoreboard.js","components/MainPage/MainPage.js","components/LoginPage/LoginPage.js","hooks/useKeyPress.js","App.js","store/reducers/auth.js","store/reducers/game.js","store/reducers/reviews.js","store/reducers/index.js","utils/firebase.js","store/sagas/authSaga.js","utils/quizApi.js","store/sagas/gameSaga.js","store/sagas/reviewsSaga.js","store/sagas/index.js","store/index.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAIL","LOGOUT_START","LOGOUT_SUCCESS","LOGOUT_FAIL","START_GAME","RESET_GAME","FETCH_QUIZ_SUCCESS","FETCH_QUIZ_FAIL","FETCH_QUIZ_CANCEL","ANSWER_QUESTION","NEXT_QUESTION","FINISH_GAME","TIME_LEFT","ADD_SCOREBOARD","FETCH_SCOREBOARD_START","FETCH_SCOREBOARD_SUCCESS","ADD_REVIEW_START","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAIL","FETCH_REVIEWS_START","FETCH_REVIEWS_SUCCESS","FETCH_REVIEWS_FAIL","authFail","payload","type","resetGame","fetchQuizFail","finishGame","addScoreboardFail","fetchScoreboardStart","fetchScoreboardFail","addReviewFail","fetchReviewsFail","QuizLoading","dispatch","useDispatch","onClick","Quiz","score","timeLeft","question","useSelector","state","game","questions","currentQuestionIndex","index","answerQuestion","answer","dangerouslySetInnerHTML","__html","AddReview","userName","name","useState","review","setReview","htmlFor","value","onChange","e","target","GameOver","NameSelection","setName","length","Reviews","reviews","useEffect","reviewsDisplay","map","date","id","Scoreboard","scoreboard","scoreList","time","MainPage","gameDisplay","setTimeLeft","stage","interval","setInterval","prev","clearInterval","LoginPage","targetKey","callback","isRegister","setIsRegister","email","setEmail","password","setPassword","authError","auth","submitForm","preventDefault","keyPressHandler","key","keyCode","window","addEventListener","removeEventListener","App","isLoggedIn","className","initialState","user","error","answers","combineReducers","currentQuestion","isCorrect","correct_answer","newScore","correctAnswer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","registerUser","createUserWithEmailAndPassword","then","catch","Promise","reject","loginUser","signInWithEmailAndPassword","logoutUser","signOut","addReview","data","newKey","ref","child","push","updates","update","fetchReviews","once","snapshot","reviewData","val","hasOwnProperty","element","addScore","fetchScoreboard","scoreboardData","logout","authorize","loginFlow","call","put","message","action","take","fetchQuiz","fetch","res","json","loadedQuestions","results","fetchQuestionSaga","cancelFetchQuiz","startGameSaga","questionsSaga","submitScore","gameSaga","scoreboardSaga","delay","cancel","fork","i","nextQuestion","timeRemaining","select","moment","format","scoreResult","race","finish","spawn","addReviewSaga","fetchReviewsSaga","all","saga","authSaga","reviewsSaga","sagaMiddleware","createSagaMiddleware","middleware","withDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","rootSaga","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c61fe458.chunk.js","sourcesContent":["export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n\r\nexport const LOGOUT_START = 'LOGOUT_START';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\r\n\r\n// game actions\r\nexport const START_GAME = 'START_GAME';\r\nexport const RESET_GAME = 'RESET_GAME';\r\n\r\nexport const FETCH_QUIZ_START = 'FETCH_QUIZ_START';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\nexport const FETCH_QUIZ_FAIL = 'FETCH_QUIZ_FAIL';\r\nexport const FETCH_QUIZ_CANCEL = 'FETCH_QUIZ_CANCEL';\r\n\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION';\r\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\r\nexport const FINISH_GAME = 'FINISH_GAME';\r\n\r\n// score\r\nexport const TIME_LEFT = 'TIME_LEFT';\r\nexport const ADD_SCOREBOARD = 'ADD_SCOREBOARD';\r\nexport const ADD_SCOREBOARD_FAIL = 'ADD_SCOREBOARD_FAIL';\r\nexport const FETCH_SCOREBOARD_START = 'FETCH_SCOREBOARD_START';\r\nexport const FETCH_SCOREBOARD_SUCCESS = 'FETCH_SCOREBOARD_SUCCESS';\r\nexport const FETCH_SCOREBOARD_FAIL = 'FETCH_SCOREBOARD_FAIL';\r\n\r\n// reviews\r\nexport const ADD_REVIEW_START = 'ADD_REVIEW_START';\r\nexport const ADD_REVIEW_SUCCESS = 'ADD_REVIEW_SUCCESS';\r\nexport const ADD_REVIEW_FAIL = 'ADD_REVIEW_FAIL';\r\n\r\nexport const FETCH_REVIEWS_START = 'FETCH_REVIEWS_START';\r\nexport const FETCH_REVIEWS_SUCCESS = 'FETCH_REVIEWS_SUCCESS';\r\nexport const FETCH_REVIEWS_FAIL = 'FETCH_REVIEWS_FAIL';\r\n","import {\r\n\tAUTH_FAIL,\r\n\tAUTH_START,\r\n\tAUTH_SUCCESS,\r\n\tLOGOUT_FAIL,\r\n\tLOGOUT_START,\r\n\tLOGOUT_SUCCESS,\r\n} from './actionTypes';\r\n\r\nexport const authStart = (payload) => ({\r\n\ttype: AUTH_START,\r\n\tpayload,\r\n});\r\n\r\nexport const authSuccess = (payload) => ({\r\n\ttype: AUTH_SUCCESS,\r\n\tpayload,\r\n});\r\n\r\nexport const authFail = (payload) => ({\r\n\ttype: AUTH_FAIL,\r\n\tpayload,\r\n});\r\n\r\nexport const logoutStart = () => ({\r\n\ttype: LOGOUT_START,\r\n});\r\n\r\nexport const logoutFail = () => ({\r\n\ttype: LOGOUT_FAIL,\r\n});\r\n\r\nexport const logoutSuccess = () => ({\r\n\ttype: LOGOUT_SUCCESS,\r\n});\r\n","import {\r\n\tANSWER_QUESTION,\r\n\tFETCH_QUIZ_CANCEL,\r\n\tFETCH_QUIZ_FAIL,\r\n\tFETCH_QUIZ_START,\r\n\tFETCH_QUIZ_SUCCESS,\r\n\tNEXT_QUESTION,\r\n\tRESET_GAME,\r\n\tSTART_GAME,\r\n\tFINISH_GAME,\r\n\tTIME_LEFT,\r\n\tADD_SCOREBOARD,\r\n\tFETCH_SCOREBOARD_START,\r\n\tFETCH_SCOREBOARD_FAIL,\r\n\tFETCH_SCOREBOARD_SUCCESS,\r\n\tADD_SCOREBOARD_FAIL,\r\n} from './actionTypes';\r\n\r\nexport const startGame = (payload) => ({\r\n\ttype: START_GAME,\r\n\tpayload,\r\n});\r\n\r\nexport const resetGame = (payload) => ({\r\n\ttype: RESET_GAME,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchQuizStart = (payload) => ({\r\n\ttype: FETCH_QUIZ_START,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchQuizSuccess = (payload) => ({\r\n\ttype: FETCH_QUIZ_SUCCESS,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchQuizFail = (payload) => ({\r\n\ttype: FETCH_QUIZ_FAIL,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchQuizCancel = (payload) => ({\r\n\ttype: FETCH_QUIZ_CANCEL,\r\n\tpayload,\r\n});\r\n\r\nexport const nextQuestion = (payload) => ({\r\n\ttype: NEXT_QUESTION,\r\n\tpayload,\r\n});\r\n\r\nexport const answerQuestion = (payload) => ({\r\n\ttype: ANSWER_QUESTION,\r\n\tpayload,\r\n});\r\n\r\nexport const finishGame = (payload) => ({\r\n\ttype: FINISH_GAME,\r\n\tpayload,\r\n});\r\n\r\nexport const timeLeft = (payload) => ({\r\n\ttype: TIME_LEFT,\r\n\tpayload,\r\n});\r\n\r\nexport const addScoreboard = (payload) => ({\r\n\ttype: ADD_SCOREBOARD,\r\n\tpayload,\r\n});\r\nexport const addScoreboardFail = (payload) => ({\r\n\ttype: ADD_SCOREBOARD_FAIL,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchScoreboardStart = (payload) => ({\r\n\ttype: FETCH_SCOREBOARD_START,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchScoreboardFail = (payload) => ({\r\n\ttype: FETCH_SCOREBOARD_FAIL,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchScoreboardSuccess = (payload) => ({\r\n\ttype: FETCH_SCOREBOARD_SUCCESS,\r\n\tpayload,\r\n});\r\n","import {\r\n\tADD_REVIEW_FAIL,\r\n\tADD_REVIEW_START,\r\n\tADD_REVIEW_SUCCESS,\r\n\tFETCH_REVIEWS_FAIL,\r\n\tFETCH_REVIEWS_START,\r\n\tFETCH_REVIEWS_SUCCESS,\r\n} from './actionTypes';\r\n\r\nexport const addReviewStart = (payload) => ({\r\n\ttype: ADD_REVIEW_START,\r\n\tpayload,\r\n});\r\n\r\nexport const addReviewFail = (payload) => ({\r\n\ttype: ADD_REVIEW_FAIL,\r\n\tpayload,\r\n});\r\n\r\nexport const addReviewSuccess = (payload) => ({\r\n\ttype: ADD_REVIEW_SUCCESS,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchReviewsStart = (payload) => ({\r\n\ttype: FETCH_REVIEWS_START,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchReviewsFail = (payload) => ({\r\n\ttype: FETCH_REVIEWS_FAIL,\r\n\tpayload,\r\n});\r\n\r\nexport const fetchReviewsSuccess = (payload) => ({\r\n\ttype: FETCH_REVIEWS_SUCCESS,\r\n\tpayload,\r\n});\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchQuizCancel } from '../../../store/actions';\r\n\r\nconst QuizLoading = () => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst cancelGame = () => {\r\n\t\tdispatch(fetchQuizCancel());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Loading...</p>\r\n\t\t\t<button onClick={cancelGame}>Cancel</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default QuizLoading;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n\tanswerQuestion as answerQuestionAction,\r\n\tfinishGame,\r\n} from '../../../store/actions';\r\n\r\nconst Quiz = ({ score, timeLeft }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst question = useSelector(\r\n\t\t(state) => state.game.questions[state.game.currentQuestionIndex]\r\n\t).question;\r\n\r\n\tconst index = useSelector((state) => state.game.currentQuestionIndex);\r\n\r\n\tconst quitGame = () => {\r\n\t\tdispatch(finishGame());\r\n\t};\r\n\r\n\tconst answerQuestion = (answer) => {\r\n\t\tdispatch(answerQuestionAction({ answer }));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Time Left: {timeLeft}</p>\r\n\t\t\t<p>Score: {score}</p>\r\n\t\t\t<p>Question : {index + 1} / 10</p>\r\n\t\t\t<p dangerouslySetInnerHTML={{ __html: question }}></p>\r\n\t\t\t<button onClick={() => answerQuestion('True')}>True</button>\r\n\t\t\t<button onClick={() => answerQuestion('False')}>False</button>\r\n\t\t\t<button onClick={quitGame}>Quit Game</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Quiz;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addReviewStart } from '../../../store/actions/index';\r\n\r\nconst AddReview = () => {\r\n\tconst userName = useSelector((state) => state.game.name);\r\n\tconst [review, setReview] = useState('');\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst submitReview = () => {\r\n\t\tdispatch(addReviewStart({ name: userName, review }));\r\n\t\tsetReview('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label htmlFor='review'>Review:</label>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={review}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tsetReview(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<button onClick={submitReview}>Submit</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddReview;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetGame } from '../../../store/actions';\r\nimport AddReview from '../AddReview/AddReview';\r\n\r\nconst GameOver = ({ score }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst playAgain = () => {\r\n\t\tdispatch(resetGame());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>Game over. Your score is: {score}</p>\r\n\t\t\t<button onClick={playAgain}>Play Again</button>\r\n\t\t\t<AddReview />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startGame as startGameAction } from '../../../store/actions';\r\n\r\nconst NameSelection = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [name, setName] = useState('wegweg');\r\n\r\n\tconst startGame = () => {\r\n\t\tif (name.length > 0) {\r\n\t\t\tdispatch(startGameAction({ name }));\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<label htmlFor='name'>Enter your name:</label>\r\n\t\t\t<input\r\n\t\t\t\tname='name'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\tvalue={name}\r\n\t\t\t/>\r\n\t\t\t<button onClick={startGame}>Start Game</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NameSelection;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchReviewsStart } from '../../../store/actions/index';\r\n\r\nconst Reviews = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst reviews = useSelector((state) => state.reviews.reviews);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchReviewsStart());\r\n\t}, [dispatch]);\r\n\r\n\tconst reviewsDisplay = reviews.map((review) => (\r\n\t\t<div key={review.id}>\r\n\t\t\t<p>{review.name}</p>\r\n\t\t\t<p>{review.date}</p>\r\n\t\t\t<p>{review.review}</p>\r\n\t\t</div>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>What users think of our game:</h1>\r\n\t\t\t<div>{reviewsDisplay}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchScoreboardStart } from '../../../store/actions';\r\n\r\nconst Scoreboard = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst scoreboard = useSelector((state) => state.game.scoreboard);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchScoreboardStart());\r\n\t}, [dispatch]);\r\n\r\n\tconst scoreList = scoreboard.map((score) => (\r\n\t\t<div key={score.id}>\r\n\t\t\t<p>{score.name}</p>\r\n\t\t\t<p>{score.score}</p>\r\n\t\t\t<p>{score.date}</p>\r\n\t\t\t<p>{score.time}</p>\r\n\t\t</div>\r\n\t));\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Scoreboard</h1>\r\n\t\t\t{scoreList}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scoreboard;\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport QuizLoading from './QuizLoading/QuizLoading';\r\nimport Quiz from './Quiz/Quiz';\r\nimport GameOver from './GameOver/GameOver';\r\nimport NameSelection from './NameSelection/NameSelection';\r\nimport Reviews from './Reviews/Reviews';\r\nimport { timeLeft as timeLeftAction } from '../../store/actions/index';\r\nimport Scoreboard from './Scoreboard/Scoreboard';\r\n\r\nfunction MainPage() {\r\n\tconst [timeLeft, setTimeLeft] = useState(60);\r\n\tconst stage = useSelector((state) => state.game.stage);\r\n\tconst score = useSelector((state) => state.game.score);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tlet interval;\r\n\t\tif (stage === 3) {\r\n\t\t\tinterval = setInterval(() => {\r\n\t\t\t\tsetTimeLeft((prev) => prev - 1);\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t\tif (stage === 4) {\r\n\t\t\tdispatch(timeLeftAction(timeLeft));\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tclearInterval(interval);\r\n\t\t\tsetTimeLeft(60);\r\n\t\t};\r\n\t}, [stage, dispatch]);\r\n\r\n\tlet gameDisplay;\r\n\r\n\tswitch (stage) {\r\n\t\tcase 1:\r\n\t\t\tgameDisplay = <NameSelection />;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tgameDisplay = <QuizLoading />;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tgameDisplay = <Quiz score={score} timeLeft={timeLeft} />;\r\n\t\t\tbreak;\r\n\t\tcase 4:\r\n\t\t\tgameDisplay = <GameOver score={score} />;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{gameDisplay}\r\n\t\t\t<Reviews />\r\n\t\t\t<Scoreboard />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default MainPage;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authStart } from '../../store/actions';\r\nimport { useKeyPress } from '../../hooks/useKeyPress';\r\n\r\nconst LoginPage = () => {\r\n\tconst [isRegister, setIsRegister] = useState(false);\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst dispatch = useDispatch();\r\n\tconst authError = useSelector((state) => state.auth.authError);\r\n\r\n\tconst submitForm = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(authStart({ email, password, isRegister }));\r\n\t};\r\n\r\n\tuseKeyPress('Enter', submitForm);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button onClick={() => setIsRegister((prev) => !prev)}>\r\n\t\t\t\tSwitch to {isRegister ? 'Login' : 'Register'}\r\n\t\t\t</button>\r\n\t\t\t<form>\r\n\t\t\t\t<label htmlFor='name'>Email</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t/>\r\n\t\t\t\t{authError && <p>{authError}</p>}\r\n\t\t\t\t<button onClick={submitForm}>\r\n\t\t\t\t\t{isRegister ? 'Register' : 'Login'}\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","import { useEffect } from 'react';\r\n\r\nexport function useKeyPress(targetKey, callback) {\r\n\tuseEffect(() => {\r\n\t\tconst keyPressHandler = (e) => {\r\n\t\t\t// Either pass in the key name (ex: Enter) or the keyCode (ex: 13)\r\n\t\t\tif (e.key === targetKey || e.keyCode === targetKey) {\r\n\t\t\t\tcallback(e);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('keypress', keyPressHandler);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('keypress', keyPressHandler);\r\n\t\t};\r\n\t}, [callback, targetKey]);\r\n}\r\n","import { useSelector } from 'react-redux';\nimport MainPage from './components/MainPage/MainPage';\nimport LoginPage from './components/LoginPage/LoginPage';\n\nfunction App() {\n\tconst isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n\treturn <div className='App'>{isLoggedIn ? <MainPage /> : <LoginPage />}</div>;\n}\n\nexport default App;\n","import {\r\n\tAUTH_FAIL,\r\n\tAUTH_SUCCESS,\r\n\tLOGOUT_SUCCESS,\r\n\tLOGOUT_FAIL,\r\n} from '../actions/actionTypes';\r\nconst initialState = {\r\n\tisLoggedIn: true,\r\n\tauthError: null,\r\n\tuser: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase AUTH_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoggedIn: true,\r\n\t\t\t\tauthError: null,\r\n\t\t\t\tuser: payload,\r\n\t\t\t};\r\n\t\tcase AUTH_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\tauthError: payload,\r\n\t\t\t\tuser: null,\r\n\t\t\t};\r\n\t\tcase LOGOUT_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoggedIn: false,\r\n\t\t\t\tauthError: null,\r\n\t\t\t\tuser: null,\r\n\t\t\t};\r\n\t\tcase LOGOUT_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import {\r\n\tADD_SCOREBOARD,\r\n\tANSWER_QUESTION,\r\n\tFETCH_QUIZ_FAIL,\r\n\tFETCH_QUIZ_SUCCESS,\r\n\tFETCH_SCOREBOARD_SUCCESS,\r\n\tFINISH_GAME,\r\n\tNEXT_QUESTION,\r\n\tRESET_GAME,\r\n\tSTART_GAME,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\tstage: 1,\r\n\tname: '',\r\n\tquestions: [],\r\n\terror: null,\r\n\tanswers: [],\r\n\tscore: null,\r\n\tcurrentQuestionIndex: null,\r\n\tscoreboard: [],\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase START_GAME:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstage: 2,\r\n\t\t\t\tname: payload.name,\r\n\t\t\t\tquestions: [],\r\n\t\t\t\terror: null,\r\n\t\t\t\tanswers: [],\r\n\t\t\t\tscore: null,\r\n\t\t\t};\r\n\t\tcase RESET_GAME:\r\n\t\t\treturn initialState;\r\n\t\tcase FETCH_QUIZ_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstage: 3,\r\n\t\t\t\tquestions: payload,\r\n\t\t\t\terror: null,\r\n\t\t\t\tscore: 0,\r\n\t\t\t\tcurrentQuestionIndex: 0,\r\n\t\t\t};\r\n\t\tcase FETCH_QUIZ_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstage: 1,\r\n\t\t\t\tname: '',\r\n\t\t\t\tquestions: [],\r\n\t\t\t\terror: payload,\r\n\t\t\t\tanswers: [],\r\n\t\t\t\tscore: null,\r\n\t\t\t};\r\n\t\tcase ANSWER_QUESTION:\r\n\t\t\tconst currentQuestion = state.questions[state.currentQuestionIndex];\r\n\t\t\tconst isCorrect =\r\n\t\t\t\tpayload.answer === currentQuestion.correct_answer ? true : false;\r\n\t\t\tlet newScore = state.score;\r\n\t\t\tif (isCorrect) newScore++;\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tscore: newScore,\r\n\t\t\t\tanswers: [\r\n\t\t\t\t\t...state.answers,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tquestion: currentQuestion.question,\r\n\t\t\t\t\t\tanswer: payload.answer,\r\n\t\t\t\t\t\tcorrectAnswer: currentQuestion.correct_answer,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t};\r\n\t\tcase NEXT_QUESTION:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentQuestionIndex: state.currentQuestionIndex + 1,\r\n\t\t\t};\r\n\t\tcase FINISH_GAME:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tstage: 4,\r\n\t\t\t};\r\n\t\tcase ADD_SCOREBOARD:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tscoreboard: [...state.scoreboard, payload],\r\n\t\t\t};\r\n\t\tcase FETCH_SCOREBOARD_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tscoreboard: payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import {\r\n\tADD_REVIEW_FAIL,\r\n\tADD_REVIEW_SUCCESS,\r\n\tFETCH_REVIEWS_FAIL,\r\n\tFETCH_REVIEWS_SUCCESS,\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\treviews: [],\r\n\terror: null,\r\n};\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n\tswitch (type) {\r\n\t\tcase ADD_REVIEW_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\treviews: [...state.reviews, payload],\r\n\t\t\t};\r\n\t\tcase ADD_REVIEW_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: payload,\r\n\t\t\t};\r\n\t\tcase FETCH_REVIEWS_SUCCESS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\treviews: payload,\r\n\t\t\t};\r\n\t\tcase FETCH_REVIEWS_FAIL:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './auth';\r\nimport gameReducer from './game';\r\nimport reviewsReducer from './reviews';\r\n\r\nexport default combineReducers({\r\n\tauth: authReducer,\r\n\tgame: gameReducer,\r\n\treviews: reviewsReducer,\r\n});\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nvar firebaseConfig = {\r\n\tapiKey: 'AIzaSyAtkq6eISEeD5EmvIVqGE3PTeLLPvt1hy4',\r\n\tauthDomain: 'redux-saga-learning-2f466.firebaseapp.com',\r\n\tdatabaseURL: 'https://redux-saga-learning-2f466.firebaseio.com',\r\n\tprojectId: 'redux-saga-learning-2f466',\r\n\tstorageBucket: 'redux-saga-learning-2f466.appspot.com',\r\n\tmessagingSenderId: '1004089938686',\r\n\tappId: '1:1004089938686:web:c668965ce71da739428baf',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nvar database = firebase.database();\r\n\r\nexport const registerUser = ({ email, password }) => {\r\n\treturn firebase\r\n\t\t.auth()\r\n\t\t.createUserWithEmailAndPassword(email, password)\r\n\t\t.then((user) => user)\r\n\t\t.catch((error) => Promise.reject(error));\r\n};\r\n\r\nexport const loginUser = ({ email, password }) => {\r\n\treturn firebase\r\n\t\t.auth()\r\n\t\t.signInWithEmailAndPassword(email, password)\r\n\t\t.then((user) => user)\r\n\t\t.catch((error) => Promise.reject(error));\r\n};\r\n\r\nexport const logoutUser = () => {\r\n\treturn firebase\r\n\t\t.auth()\r\n\t\t.signOut()\r\n\t\t.then(function () {\r\n\t\t\t// Sign-out successful.\r\n\t\t})\r\n\t\t.catch((error) => Promise.reject(error));\r\n};\r\n\r\nexport const addReview = ({ name, review, date }) => {\r\n\t// A post entry.\r\n\tconst data = {\r\n\t\tname,\r\n\t\treview,\r\n\t\tdate,\r\n\t};\r\n\r\n\t// Get a key for a new Post.\r\n\tconst newKey = firebase.database().ref().child('reviews').push().key;\r\n\r\n\tdata.id = newKey;\r\n\r\n\t// Write the new post's data simultaneously in the posts list and the user's post list.\r\n\tconst updates = {};\r\n\tupdates['/reviews/' + newKey] = data;\r\n\r\n\tfirebase.database().ref().update(updates);\r\n\r\n\treturn data;\r\n};\r\n\r\nexport const fetchReviews = () => {\r\n\treturn firebase\r\n\t\t.database()\r\n\t\t.ref('/reviews')\r\n\t\t.once('value')\r\n\t\t.then((snapshot) => {\r\n\t\t\tconst reviewData = [];\r\n\t\t\tfor (const key in snapshot.val()) {\r\n\t\t\t\tif (snapshot.val().hasOwnProperty(key)) {\r\n\t\t\t\t\tconst element = snapshot.val()[key];\r\n\t\t\t\t\treviewData.push(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn reviewData;\r\n\t\t})\r\n\t\t.catch((error) => Promise.reject(error));\r\n};\r\n\r\nexport const addScore = ({ name, score, date, time }) => {\r\n\t// A post entry.\r\n\tconst data = {\r\n\t\tname,\r\n\t\tscore,\r\n\t\tdate,\r\n\t\ttime,\r\n\t};\r\n\r\n\t// Get a key for a new Post.\r\n\tconst newKey = firebase.database().ref().child('scoreboard').push().key;\r\n\r\n\tdata.id = newKey;\r\n\r\n\t// Write the new post's data simultaneously in the posts list and the user's post list.\r\n\tconst updates = {};\r\n\tupdates['/scoreboard/' + newKey] = data;\r\n\r\n\tfirebase.database().ref().update(updates);\r\n\r\n\treturn data;\r\n};\r\n\r\nexport const fetchScoreboard = () => {\r\n\treturn firebase\r\n\t\t.database()\r\n\t\t.ref('/scoreboard')\r\n\t\t.once('value')\r\n\t\t.then((snapshot) => {\r\n\t\t\tconst scoreboardData = [];\r\n\t\t\tfor (const key in snapshot.val()) {\r\n\t\t\t\tif (snapshot.val().hasOwnProperty(key)) {\r\n\t\t\t\t\tconst element = snapshot.val()[key];\r\n\t\t\t\t\tscoreboardData.push(element);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn scoreboardData;\r\n\t\t})\r\n\t\t.catch((error) => Promise.reject(error));\r\n};\r\n","import { call, put, take } from 'redux-saga/effects';\r\nimport { AUTH_START, LOGOUT_START } from '../actions/actionTypes';\r\nimport { registerUser, loginUser, logoutUser } from '../../utils/firebase';\r\nimport { authFail, authSuccess, logoutFail, logoutSuccess } from '../actions';\r\n\r\nexport function* logout() {\r\n\ttry {\r\n\t\tyield call(logoutUser);\r\n\t\tyield put(logoutSuccess());\r\n\t} catch (error) {\r\n\t\tyield put(logoutFail(error.message));\r\n\t}\r\n}\r\n\r\nexport function* authorize(action) {\r\n\ttry {\r\n\t\tconst user = action.payload.isRegister\r\n\t\t\t? yield call(registerUser, action.payload)\r\n\t\t\t: yield call(loginUser, action.payload);\r\n\t\tyield put(authSuccess(user));\r\n\t\treturn user;\r\n\t} catch (error) {\r\n\t\tyield put(authFail(error.message));\r\n\t}\r\n}\r\n\r\n// TODO: try to add the register here too\r\nexport function* loginFlow() {\r\n\twhile (true) {\r\n\t\tconst action = yield take(AUTH_START);\r\n\t\tconst user = yield call(authorize, action);\r\n\t\tif (user) {\r\n\t\t\tyield take(LOGOUT_START);\r\n\t\t\tyield call(logout);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function* () {\r\n\tyield loginFlow();\r\n}\r\n","const apiUrl = 'https://opentdb.com/api.php?amount=10&type=boolean';\r\n\r\nexport const fetchQuiz = () => {\r\n\treturn fetch(apiUrl)\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json();\r\n\t\t})\r\n\t\t.then((loadedQuestions) => loadedQuestions.results)\r\n\t\t.catch((error) => Promise.reject(error));\r\n};\r\n","import {\r\n\tcall,\r\n\tput,\r\n\ttake,\r\n\tcancel,\r\n\tfork,\r\n\tdelay,\r\n\trace,\r\n\tselect,\r\n\tspawn,\r\n} from 'redux-saga/effects';\r\nimport {\r\n\tANSWER_QUESTION,\r\n\tFETCH_QUIZ_CANCEL,\r\n\tFETCH_QUIZ_SUCCESS,\r\n\tFETCH_SCOREBOARD_START,\r\n\tSTART_GAME,\r\n\tTIME_LEFT,\r\n} from '../actions/actionTypes';\r\nimport { fetchQuiz } from '../../utils/quizApi';\r\nimport {\r\n\taddScoreboard,\r\n\taddScoreboardFail,\r\n\tfetchQuizFail,\r\n\tfetchQuizSuccess,\r\n\tfetchScoreboardFail,\r\n\tfetchScoreboardStart,\r\n\tfetchScoreboardSuccess,\r\n\tfinishGame,\r\n\tnextQuestion,\r\n\tresetGame,\r\n} from '../actions';\r\nimport { addScore, fetchScoreboard } from '../../utils/firebase';\r\nimport moment from 'moment';\r\n\r\nexport function* fetchQuestionSaga() {\r\n\ttry {\r\n\t\tyield delay(500); //Just for testing purposes\r\n\t\tconst data = yield call(fetchQuiz);\r\n\t\tyield put(fetchQuizSuccess(data));\r\n\t} catch (error) {\r\n\t\tyield put(\r\n\t\t\tfetchQuizFail(\r\n\t\t\t\t'There was an error trying to get the questions. Please try again!'\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport function* cancelFetchQuiz(fetchQuiz) {\r\n\tyield take(FETCH_QUIZ_CANCEL);\r\n\tyield cancel(fetchQuiz);\r\n\tyield put(resetGame());\r\n}\r\n\r\nexport function* startGameSaga() {\r\n\twhile (true) {\r\n\t\tyield take(START_GAME);\r\n\t\tconst fetch = yield fork(fetchQuestionSaga);\r\n\t\tyield fork(cancelFetchQuiz, fetch);\r\n\t}\r\n}\r\n\r\nexport function* questionsSaga() {\r\n\tfor (let i = 0; i < 10; i++) {\r\n\t\tyield take(ANSWER_QUESTION);\r\n\t\tyield put(nextQuestion());\r\n\t}\r\n}\r\n\r\nexport function* submitScore() {\r\n\tconst action = yield take(TIME_LEFT);\r\n\tconst timeRemaining = action.payload;\r\n\tconst name = yield select((state) => state.game.name);\r\n\tconst score = yield select((state) => state.game.score);\r\n\r\n\ttry {\r\n\t\tconst scoreResult = yield call(addScore, {\r\n\t\t\tname,\r\n\t\t\tscore,\r\n\t\t\tdate: moment().format('LLL'),\r\n\t\t\ttime: 60 - timeRemaining,\r\n\t\t});\r\n\r\n\t\tyield put(addScoreboard(scoreResult));\r\n\t\tyield put(fetchScoreboardStart());\r\n\t} catch (error) {\r\n\t\taddScoreboardFail(error);\r\n\t}\r\n}\r\n\r\nexport function* gameSaga() {\r\n\tyield take(FETCH_QUIZ_SUCCESS);\r\n\r\n\tyield race({\r\n\t\tdelay: delay(60000),\r\n\t\tfinish: questionsSaga(),\r\n\t});\r\n\r\n\tyield put(finishGame());\r\n\r\n\tyield call(submitScore);\r\n}\r\n\r\nexport function* scoreboardSaga() {\r\n\twhile (true) {\r\n\t\tyield take(FETCH_SCOREBOARD_START);\r\n\t\ttry {\r\n\t\t\tconst scoreboard = yield call(fetchScoreboard);\r\n\t\t\tyield put(fetchScoreboardSuccess(scoreboard));\r\n\t\t} catch (error) {\r\n\t\t\tyield put(fetchScoreboardFail(error));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function* () {\r\n\tyield fork(startGameSaga);\r\n\tyield fork(gameSaga);\r\n\tyield spawn(scoreboardSaga);\r\n}\r\n","import { call, take, all, put } from 'redux-saga/effects';\r\nimport { ADD_REVIEW_START, FETCH_REVIEWS_START } from '../actions/actionTypes';\r\nimport { addReview, fetchReviews } from '../../utils/firebase';\r\nimport {\r\n\taddReviewFail,\r\n\taddReviewSuccess,\r\n\tfetchReviewsFail,\r\n\tfetchReviewsSuccess,\r\n} from '../actions';\r\nimport moment from 'moment';\r\n\r\nexport function* addReviewSaga() {\r\n\twhile (true) {\r\n\t\tconst action = yield take(ADD_REVIEW_START);\r\n\t\tconst data = {\r\n\t\t\tname: action.payload.name,\r\n\t\t\treview: action.payload.review,\r\n\t\t\tdate: moment().format('LLL'),\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst reviews = yield call(addReview, data);\r\n\r\n\t\t\tyield put(addReviewSuccess(reviews));\r\n\t\t} catch (error) {\r\n\t\t\tyield put(addReviewFail(error));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// use retry multiple times here\r\nexport function* fetchReviewsSaga() {\r\n\twhile (true) {\r\n\t\tyield take(FETCH_REVIEWS_START);\r\n\t\ttry {\r\n\t\t\tconst reviews = yield call(fetchReviews);\r\n\t\t\tyield put(fetchReviewsSuccess(reviews));\r\n\t\t} catch (error) {\r\n\t\t\tyield put(fetchReviewsFail(error));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default function* () {\r\n\tyield all([addReviewSaga(), fetchReviewsSaga()]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport authSaga from './authSaga';\r\nimport gameSaga from './gameSaga';\r\nimport reviewsSaga from './reviewsSaga';\r\n\r\nexport default function* saga() {\r\n\tyield all([authSaga(), gameSaga(), reviewsSaga()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [sagaMiddleware];\r\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\twithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}